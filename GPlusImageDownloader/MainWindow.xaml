<Window x:Class="GPlusImageDownloader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:local="clr-namespace:GPlusImageDownloader.ViewModel"
        Title="MainWindow" Height="600" Width="325">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/TestDataDictionary.xaml" />
                <ResourceDictionary>
                    <DataTemplate DataType="{x:Type local:JobActivityGroupViewModelBase}">
                        <!--投稿者情報-->
                        <StackPanel Orientation="Horizontal" Margin="0">
                            <ContentControl Focusable="False" Width="25" Height="25">
                                <Image Source="{Binding NoticeIcon}" />
                                <ContentControl.Effect>
                                    <DropShadowEffect Color="Black" Direction="315" Opacity="0.3" BlurRadius="5" ShadowDepth="0" />
                                </ContentControl.Effect>
                            </ContentControl>
                            <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{Binding NoticeText}" />
                        </StackPanel>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type local:JobViewModelBase}">
                        <Grid Width="250" Height="80">
                            <ContentControl Name="imgBorder" Focusable="False" Margin="0,0,0,0">
                                <Image Name="thumb" Source="{Binding ImageThumbPath}">
                                    <!--サムネイル非選択状態-->
                                    <Image.Effect>
                                        <DropShadowEffect Color="Black" Direction="315" Opacity="0.3" BlurRadius="5" ShadowDepth="0" />
                                    </Image.Effect>
                                </Image>
                                <i:Interaction.Triggers>
                                    <!--ダブルクリック時-->
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:EventTrigger.Actions>
                                            <i:InvokeCommandAction Command="{Binding OpenImageCommand}" />
                                        </i:EventTrigger.Actions>
                                    </i:EventTrigger>
                                    <!--サムネイルの選択、非選択状態-->
                                    <ei:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="true">
                                        <ei:ChangePropertyAction PropertyName="Effect" TargetName="thumb">
                                            <ei:ChangePropertyAction.Value>
                                                <DropShadowEffect Color="Blue" Direction="315" Opacity="1" BlurRadius="8" ShadowDepth="0" />
                                            </ei:ChangePropertyAction.Value>
                                        </ei:ChangePropertyAction>
                                    </ei:DataTrigger>
                                    <ei:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="false">
                                        <ei:ChangePropertyAction PropertyName="Effect" TargetName="thumb">
                                            <ei:ChangePropertyAction.Value>
                                                <DropShadowEffect Color="Black" Direction="315" Opacity="0.3" BlurRadius="5" ShadowDepth="0" />
                                            </ei:ChangePropertyAction.Value>
                                        </ei:ChangePropertyAction>
                                    </ei:DataTrigger>
                                </i:Interaction.Triggers>
                            </ContentControl>
                            <Label Name="statusLabel" Foreground="#909090" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding DownloadStatus}" />
                        </Grid>
                        <DataTemplate.Resources>
                            <!--loading時のstatusLabel点滅挙動の定義-->
                            <Storyboard x:Key="labelOpacityStoryboard" AutoReverse="True">
                                <DoubleAnimationUsingKeyFrames
                                        RepeatBehavior="Forever" Storyboard.TargetName="statusLabel" Storyboard.TargetProperty="Opacity">
                                    <DoubleKeyFrameCollection>
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleKeyFrameCollection>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <!--loaded時のstatusLabelの消滅と画像出現の定義-->
                            <Storyboard x:Key="imageAppearStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="statusLabel" Storyboard.TargetProperty="Visibility">
                                    <ObjectKeyFrameCollection>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectKeyFrameCollection>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimation Storyboard.TargetName="statusLabel" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.8" />
                                <DoubleAnimation Storyboard.TargetName="imgBorder" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8" />
                            </Storyboard>
                            <!--delete時の画像出現の定義-->
                            <Storyboard x:Key="deletedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="imgBorder" Storyboard.TargetProperty="Opacity" From="0" To="0.5" Duration="0:0:0.4" />
                            </Storyboard>
                        </DataTemplate.Resources>
                        <DataTemplate.Triggers>
                            <!--VM.DownloadStatusの変化に合わせたアニメーションを定義-->
                            <DataTrigger Binding="{Binding DownloadStatus}" Value="Loading">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Name="statusLabelAnime" Storyboard="{StaticResource labelOpacityStoryboard}" />
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DownloadStatus}" Value="Loaded">
                                <DataTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="statusLabelAnime" />
                                    <BeginStoryboard Storyboard="{StaticResource imageAppearStoryboard}" />
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DownloadStatus}" Value="Failed">
                                <DataTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="statusLabelAnime" />
                                </DataTrigger.EnterActions>
                                <Setter TargetName="statusLabel" Property="Foreground" Value="#d02020" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DownloadStatus}" Value="Deleted">
                                <DataTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="statusLabelAnime" />
                                    <BeginStoryboard Storyboard="{StaticResource deletedStoryboard}" />
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    <ControlTemplate x:Key="treeViewRootTemplate" TargetType="{x:Type TreeView}">
                        <Grid Background="Gray">
                            <Rectangle VerticalAlignment="Bottom" Height="20">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#22000000" Offset="0.7" />
                                        <GradientStop Color="#66000000" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ScrollViewer >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="20" />
                                    </Grid.RowDefinitions>
                                    <Grid Background="White" Grid.Row="0">
                                        <ItemsPresenter />
                                    </Grid>
                                    <Rectangle Name="itemArrayShadow" Grid.Row="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Color="#66000000" Offset="0" />
                                                <GradientStop Color="#22000000" Offset="0.3" />
                                                <GradientStop Color="#00000000" Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="true">
                                <Setter TargetName="itemArrayShadow" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="itemArrayShadow" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="parentItemTemplate" TargetType="TreeViewItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                        <Border BorderBrush="LightGray" BorderThickness="0,0,0,1">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="0">
                                    <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter Name="ItemsHost" Margin="15,0,0,0" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="childItemTemplate" TargetType="TreeViewItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="0">
                                <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter Name="ItemsHost" Margin="15,0,0,0" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <TreeView Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  Template="{StaticResource treeViewRootTemplate}"
                  ItemsSource="{Binding JobActivityGroups}">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="ItemsSource" Value="{Binding DownloadImageJobs}" />
                    <Setter Property="IsExpanded" Value="True" />
                    <Setter Property="Template" Value="{StaticResource parentItemTemplate}" />
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="Template" Value="{StaticResource childItemTemplate}" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</Window>
